apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "app.commonLabels" . | nindent 4 }}
    app.kubernetes.io/name: flask-app
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: flask-app
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: flask-app
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- include "app.commonLabels" . | nindent 8 }}
    spec:
      containers:
        - name: flask-app
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - secretRef: { name: app-secrets }
            - configMapRef: { name: app-config }
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
          readinessProbe:
            httpGet: { path: /healthz, port: http }
            initialDelaySeconds: 8
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /healthz, port: http }
            initialDelaySeconds: 15
            periodSeconds: 10
