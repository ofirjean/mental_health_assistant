apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "app.commonLabels" . | nindent 4 }}
    app.kubernetes.io/name: mongo
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  serviceName: mongo
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mongo
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongo
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- include "app.commonLabels" . | nindent 8 }}
    spec:
      containers:
        - name: mongo
          image: {{ .Values.mongo.image }}
          imagePullPolicy: IfNotPresent
          args: ["--bind_ip_all"]
          ports:
            - name: mongo
              containerPort: {{ .Values.mongo.servicePort }}
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
          readinessProbe:
            tcpSocket: { port: {{ .Values.mongo.servicePort }} }
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            tcpSocket: { port: {{ .Values.mongo.servicePort }} }
            initialDelaySeconds: 20
            periodSeconds: 10
  volumeClaimTemplates:
    - metadata:
        name: mongo-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.mongo.storage }}
