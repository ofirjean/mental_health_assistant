pipeline {
  agent any  // runs on the controller for simplicity; switch to agents later if you want

  options {
    skipDefaultCheckout(true)      // we'll do an explicit 'checkout scm'
    timestamps()
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
        sh 'echo "Branch: $BRANCH_NAME  Commit: $(git rev-parse --short HEAD)"'
      }
    }

    stage('Sanity') {
      steps {
        sh '''
          echo "Workspace: $PWD"
          echo "Files at top-level:"
          ls -la || true
        '''
      }
    }

    // ----- Optional auto-detected build/test steps (will NO-OP if files are missing) -----
    stage('Python tests (if any)') {
      when { expression { fileExists('requirements.txt') } }
      steps {
        sh '''
          python3 -V || true
          python3 -m venv .venv || true
          . .venv/bin/activate || true
          pip install -U pip || true
          pip install -r requirements.txt || true
          if [ -f pytest.ini ] || [ -d tests ]; then
            pytest -q --maxfail=1 --disable-warnings || true
          else
            echo "No pytest config/tests found; skipping."
          fi
        '''
      }
    }

    stage('Node tests (if any)') {
      when { expression { fileExists('package.json') } }
      steps {
        sh '''
          command -v node && node -v || true
          command -v npm && npm -v || true
          npm ci || npm install
          npm test || echo "No test script; skipping."
        '''
      }
    }

    stage('Maven build (if any)') {
      when { expression { fileExists('pom.xml') } }
      steps {
        sh '''
          mvn -version || true
          mvn -B -DskipTests package || true
        '''
      }
    }
    // --------------------------------------------------------------------------------------
  }

  post {
    always {
      // Collect any JUnit reports if they exist
      script {
        if (fileExists('target/surefire-reports')) {
          junit 'target/surefire-reports/*.xml'
        }
        if (fileExists('junit.xml')) {
          junit 'junit.xml'
        }
      }
      archiveArtifacts artifacts: '**/*-reports/**, target/*.jar', allowEmptyArchive: true
    }
  }
}
